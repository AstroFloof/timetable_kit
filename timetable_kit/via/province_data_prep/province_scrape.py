#! /usr/bin/env python3
# via/province_scrape.py
# Part of timetable_kit
# copyright 2022, 2023 Nathanael Nerode.  Licensed under GNU Affero GPL v.3 or later.
#
# This is a simple script designed to scrape a set of files
# ab.txt, bc.txt, etc.
# which contain one VIA station code per line
# to create a python file matching stations to province codes.
# With some manual checking, this can be used to make province_data.py in the via/directory.
#
# The necessary text files can be extracted from
# https://cptdb.ca/wiki/index.php/VIA_Rail_Canada_stations
# using a spreadsheet program.
#
# The exception is the NY stations, which you will have to extract by hand
#
# The list of stations does not change often so it was not worth
# fully automating this.

provinces = ["AB", "BC", "MB", "NB", "NS", "ON", "QC", "SK", "NY"]
outfile = open("province_data.py", "w")

# Preamble
outfile.write(
    """# via/province_data.py
# Part of timetable_kit
#
# Copyright 2023 Nathanael Nerode.  Licensed under GNU Affero GPL v.3 or later.

\"\"\"
This module says which province each VIA station is in.
Generated by station_to_province/province_scrape.py and some text files.
\"\"\"

from __future__ import annotations  # for Optional[] typing


def stop_code_to_province(stop_code: str) -> Optional[str]:
    "Given a VIA stop code, return the capitalized two-letter code for the province or state, or None if unknown."
    return _stop_code_to_province.get(stop_code)


"""
)

# Write out the dict
outfile.write("_stop_code_to_province = {\n")
for province in provinces:
    province_filename = province.lower() + ".txt"
    outfile.write(f"    # {province} stations\n")
    file = open(province_filename, "r")
    station_codes = file.readlines()
    db_lines = [f'    "{x.strip()}": "{province}",\n' for x in station_codes]
    for line in db_lines:
        outfile.write(line)
outfile.write("}\n")
outfile.close()
