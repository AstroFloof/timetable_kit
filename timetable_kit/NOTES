Code cleaning:
-- run black *.py */*.py
-- run docformatter -r -i --black .
-- run mypy .

I am currently using WeasyPrint for HTML->PDF conversion because it is also a Python package.
-- Weasyprint can't handle inline SVGs.
-- Weasyprint also can't handle variable-weight fonts.  Oh Well.

-- It is hard to test PDFs.  At least on my monitor...
--- Okular needs to be set at 90% zoom to show it real size.
--- Evince needs to be set at 50% zoom to show it real size.
--- mupdf will display *correctly*. Install mupdf!

Use gucharmap to find unicode characters.

We can convert one or more pages out of a PDF to a JPEG as follows:
(this is implemented in the current program):
vips copy tt_foo.pdf[dpi=300,page=0,n=1] tt_foo.jpg

page picks out the first page (counting from zero)
n tells how many pages to copy into the JPG

Merging individual PDF pages can be done in an external program.
We do not currently need to do this, but incase it's necessary:
One which works is
pdftk empire-service-wb.pdf empire-service-eb.pdf output empire-service.pdf
The program is actually in the package "pdftk-java".

Amtrak train numbers are in the "trip_short_name" field of GTFS static data
Amtrak station codes are in the "stop_id" field of GTFS static data.
Amtrak trip_ids currently consist of the trip_short_name with the service_id concatenated after it.  This might change.

Amtrak GTFS has some problems.  It frequently has one-day "calendars".  These aren't really desirable for normal
printed timetables.  It's also missing a reasonable end date on certain services.  Has to be massaged by hand...

Station full names are retrieved from the Amtrak station data on the Web which is on the web in json format;
the json files for the station data must be downloaded in advance, 
using './amtrak/json_stations.py download' into the ./amtrak/stations/ directory.
This is to avoid beating too hard on Amtrak's website.

Everything is done with Jinja2 templates.  We built our own styler.

Color printing direct from HTML:
Chrome -- needs "More Settings -> Background Graphics" to print color
Chrome -- needs "Margins: None" to avoid putting extra crud around the printout

Firefox -- needs "Print backgrounds" to print color
Firefox -- needs to uncheck "Print Headers and Footers" to avoid putting extra crud around the printout.
Firefox -- print previews are missing cell borders but they WILL print.

File storage:
https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html

Don't use cache, it's for locally generated "throwaway" files.
$XDG_CACHE_HOME (~/.cache) for the various GTFS auto-downloads, Amtrak station DB download (cached)
FHS location: /var/cache.

Use this.
$XDG_DATA_HOME:$XDG_DATA_DIRS (~/.local/share,/usr/local/share,/usr/share) for overrideable portable data (specs, templates)
FHS location: in practice, /var/lib (/<program>) is used.

So far the program is really configuration-free.
$XDG_CONFIG_HOME:$XDG_CONFIG_DIRS (~/.config,/etc,/etc/xdg,/usr/share) for config files
https://xdgbasedirectoryspecification.com/
